apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion


    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    defaultConfig {
        multiDexEnabled true
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        applicationId "cn.com.common_function"
        versionCode 11
        versionName "11.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
            }
        }
    }
    signingConfigs {
        apply plugin: 'signing'

        release {
            storeFile file("codequality.jks")
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            shrinkResources false
            minifyEnabled false
            //proguardFiles 'proguard-project.txt'
        }
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
//            applicationIdSuffix ".debug"
//            proguardFiles 'proguard-project.txt'
        }
    }
    flavorDimensions 'env'
    productFlavors {

        pro {
            dimension 'env'
            buildConfigField "boolean", "ENABLE_PRO_ENV", "false"
            buildConfigField "boolean", "ENABLE_CATCH_CRASHLOG", "true"
        }

        uat {
            dimension 'env'
            buildConfigField "boolean", "ENABLE_PRO_ENV", "false"
            buildConfigField "boolean", "ENABLE_CATCH_CRASHLOG", "true"
            applicationIdSuffix ".debug"

        }

    }
//    externalNativeBuild {
//        cmake {
//            path "CMakeLists.txt"
//        }
//    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleDynamicVersion
    api project(':app_develop_kit')
    // Dependencies for local unit tests
    api 'androidx.test.espresso:espresso-idling-resource:3.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"

    // Android Testing Support Library's runner and rules
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'

    // Espresso UI Testing
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'

    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.24'
    def VERSION ="2.23.0"
    implementation "com.github.penfeizhou.android.animation:awebp:${VERSION}"
    implementation "com.github.penfeizhou.android.animation:glide-plugin:${VERSION}"

    implementation  'io.github.scwang90:refresh-layout-kernel:2.0.5'      //核心必须依赖
    implementation  'io.github.scwang90:refresh-header-classics:2.0.5'    //经典刷新头
    implementation  'io.github.scwang90:refresh-header-radar:2.0.5'       //雷达刷新头
    implementation  'io.github.scwang90:refresh-header-falsify:2.0.5'     //虚拟刷新头
    implementation  'io.github.scwang90:refresh-header-material:2.0.5'    //谷歌刷新头
    implementation  'io.github.scwang90:refresh-header-two-level:2.0.5'   //二级刷新头
    implementation  'io.github.scwang90:refresh-footer-ball:2.0.5'        //球脉冲加载
    implementation  'io.github.scwang90:refresh-footer-classics:2.0.5'    //经典加载
}
